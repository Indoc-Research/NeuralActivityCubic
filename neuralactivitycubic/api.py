# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/08_api.ipynb.

# %% auto 0
__all__ = ['parent_directory', 'filepath', 'results_filepath', 'default_config', 'run_analysis', 'clean_directories_after_test',
           'test_run_analysis', 'test_run_analysis_with_custom_results_directory',
           'test_run_analysis_with_missing_file', 'test_run_analysis_with_incorrect_config_batch_mode',
           'test_run_analysis_with_incorrect_config_recording_filepath']

# %% ../nbs/08_api.ipynb 2
from .datamodels import Config
from .model import Model

def run_analysis(config: Config | str) -> None:
    """
    Run analysis.

    Args:
        config (Config | str): Configuration for analysis or data source path to run analysis with default settings.
    """
    model = Model(config)
    model.create_analysis_jobs()
    model.run_analysis()

# %% ../nbs/08_api.ipynb 4
import os
from re import compile
from dataclasses import replace
from shutil import rmtree

from fastcore.test import test_fail

parent_directory = '../test_data/00/'
filepath = '../test_data/00/spiking_neuron.avi'
results_filepath = '../test_data/00/results'


def clean_directories_after_test(base_path):
    """
    Clean up directories after test.
    """
    pattern = compile(r'\d{4}_\d{2}_\d{2}_\d{2}-\d{2}-\d{2}_.+')

    matching_dirs = [
        base_path + d for d in os.listdir(base_path)
        if os.path.isdir(os.path.join(base_path, d)) and pattern.fullmatch(d)
    ]

    return matching_dirs

def test_run_analysis():
    """
    Test run_analysis function with minimalistic configuration.
    """
    run_analysis(filepath)


default_config = Config(batch_mode=False,
    baseline_estimation_method='asls',
    customize_octave_filtering=False,
    data_source_path=filepath,
    end_frame_idx=500,
    focus_area_enabled=False,
    focus_area_filepath=None,
    grid_size=10,
    include_variance=False,
    mean_signal_threshold=10.0,
    min_octave_span=1.0,
    min_peak_count=2,
    noise_window_size=200,
    recording_filepath=None,
    results_filepath=results_filepath,
    roi_filepath=None,
    roi_mode='grid',
    save_overview_png=True,
    save_single_trace_results=False,
    save_summary_results=True,
    signal_to_noise_ratio=3.0,
    start_frame_idx=0,
    use_frame_range=False,
    variance_window_size=15,
)

def test_run_analysis_with_custom_results_directory():
    """
    Test run_analysis function with custom directory to clean-up afterward.
    """
    run_analysis(default_config)

def test_run_analysis_with_missing_file():
    """
    Test run_analysis function with incorrect configuration.
    """
    run_analysis('non_existing_file.avi')


def test_run_analysis_with_incorrect_config_batch_mode():
    """
    Test run_analysis function with incorrect configuration.
    """
    incorrect_config_batch_mode = replace(default_config, batch_mode='invalid_value')
    run_analysis(incorrect_config_batch_mode)

def test_run_analysis_with_incorrect_config_recording_filepath():
    """
    Test run_analysis function with incorrect configuration.
    """
    incorrect_config_recording_filepath = replace(default_config, recording_filepath='non_existing_file.avi')
    run_analysis(incorrect_config_recording_filepath)
